@page "/fetchdata"
@using DotNetBlog.Web.Components.Article
@using MediatR
@using DotNetBlog.Application.Handlers.Article
@using DotNetBlog.Application.TransferObjects
@inject IMediator _mediator;

<PageTitle>Weather forecast</PageTitle>

@if (articles == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    @foreach (var article in articles!)
    {
        <ArticlePreview
            Title="@article.Title"
            Description="@article.Description"
            AuthorName="@article.AuthorName">
        </ArticlePreview>
    }
}

@code {

    private IReadOnlyCollection<ArticleDto>? articles { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ArticlesQuery articlesQuery = new ArticlesQuery(0, 100);

        PagedResultDto<ArticleDto> pagedResult = await _mediator.Send(articlesQuery);

        articles = pagedResult.Data;
    }
}